name: build, test and publish bs-emotion/bs-emotion-ppx

on: [push, pull_request]   

jobs:
  build_and_test:
    name: build and test ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Install esy
        run: npm -g install esy@0.6.0
        
      - name: Get esy store path
        id: esy_cache_path
        shell: bash
        run: |
          # COMPUTE THE ESY INSTALL CACHE LOCATION AHEAD OF TIME
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            THE_ESY__CACHE_INSTALL_PATH=$HOME/.esy/3_/i
            THE_ESY__CACHE_INSTALL_PATH=$( cygpath --mixed --absolute "$THE_ESY__CACHE_INSTALL_PATH")
          else
            DESIRED_LEN="86"
            HOME_ESY3="$HOME/.esy/3"
            HOME_ESY3_LEN=${#HOME_ESY3}
            NUM_UNDERS=$(echo "$(($DESIRED_LEN-$HOME_ESY3_LEN))")
            UNDERS=$(printf "%-${NUM_UNDERS}s" "_")
            UNDERS="${UNDERS// /_}"
            THE_ESY__CACHE_INSTALL_PATH=${HOME_ESY3}${UNDERS}/i  
          fi
          echo "THE_ESY__CACHE_INSTALL_PATH: $THE_ESY__CACHE_INSTALL_PATH"
          echo "##[set-output name=path;]$THE_ESY__CACHE_INSTALL_PATH"
          
      - name: Restore esy cache
        uses: actions/cache@v1.0.3
        with:
          path: ${{ steps.esy_cache_path.outputs.path }}
          key: v1-esy-${{ matrix.os }}-${{ hashFiles('**/index.json') }}
          restore-keys: |
            v1-esy-${{ matrix.os }}-
      
      - name: install and build
        working-directory: bs-emotion-ppx
        run: |                    
          esy install 
          esy b dune build --root . --ignore-promoted-rules --no-config --profile release-static
          
      - name: bs-emotion-ppx test
        working-directory: bs-emotion-ppx/test
        run: |                    
          esy install
          esy build
      
      - name: Upload artifacts ${{ matrix.os }}        
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: bs-emotion-ppx/_build/default/bin/BsEmotionPpx.exe

  publish:    
    needs: build_and_test
    if: github.event_name == 'release' && success()
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"    

      - name: Download linux artifacts        
        uses: actions/download-artifact@master
        with:
          name: ubuntu-latest
          path: release/linux

      - name: Download macOS artifacts        
        uses: actions/download-artifact@master
        with:
          name: macOS-latest
          path: release/darwin

      - name: Download windows artifacts
        uses: actions/download-artifact@master
        with:
          name: windows-latest
          path: release/windows

      - name: Move artifacts
        run: |          
          mkdir -p release/bin
          mv release/darwin/bs-emotion-ppx release/bs-emotion-ppx-darwin-x64.exe
          mv release/windows/bs-emotion-ppx.exe release/bs-emotion-ppx-win-x64.exe
          mv release/linux/bs-emotion-ppx release/bs-emotion-ppx-linux-x64.exe
          mv bs-emotion-ppx/package.json release/package.json
          mv bs-emotion-ppx/postinstall.js release/postinstall.js
          mv README.md release/README.md
          chmod +x release/*.exe
          ls -l release

      - name: Publish bs-emotion-ppx       
        working-directory: release
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
          
      - name: Publish bs-emotion
        working-directory: bs-emotion
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
